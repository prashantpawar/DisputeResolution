// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"setPartyB","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"addr1","type":"address"},{"name":"addr2","type":"address"}],"name":"setArbitrator1and2","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"raiseDispute","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"setArbitrator0","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"setPartyA","outputs":[],"type":"function"}],
    binary: "60606040526001805460ff191660ff1790556102638061001f6000396000f3606060405260e060020a60003504634d47ae8c811461004757806362c47064146100605780636daa2d44146100d85780637a3e001314610149578063ab624cf114610198575b005b60028054600160a060020a031916600435179055610045565b61004560043560243560008054819081101561000257508080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56354600160a060020a031614806100ba575081600160a060020a03166000145b806100ce575080600160a060020a03166000145b156101c357610002565b61004560015433600160a060020a0390811661010090920416148061010c5750600254600160a060020a0390811633909116145b15610147576002805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b565b6100456004358060006000506000815481101561000257508052507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638054600160a060020a0319169091179055565b6001805474ffffffffffffffffffffffffffffffffffffffff00191661010060043502179055610045565b8160006000506001815481101561000257507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564906101000a815481600160a060020a0302191690830217905550806000600050600281548110156100025750507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5658054600160a060020a031916909117905550506001805460ff1916905556",
    unlinked_binary: "60606040526001805460ff191660ff1790556102638061001f6000396000f3606060405260e060020a60003504634d47ae8c811461004757806362c47064146100605780636daa2d44146100d85780637a3e001314610149578063ab624cf114610198575b005b60028054600160a060020a031916600435179055610045565b61004560043560243560008054819081101561000257508080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56354600160a060020a031614806100ba575081600160a060020a03166000145b806100ce575080600160a060020a03166000145b156101c357610002565b61004560015433600160a060020a0390811661010090920416148061010c5750600254600160a060020a0390811633909116145b15610147576002805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b565b6100456004358060006000506000815481101561000257508052507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638054600160a060020a0319169091179055565b6001805474ffffffffffffffffffffffffffffffffffffffff00191661010060043502179055610045565b8160006000506001815481101561000257507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564906101000a815481600160a060020a0302191690830217905550806000600050600281548110156100025750507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5658054600160a060020a031916909117905550506001805460ff1916905556",
    address: "",
    generated_with: "2.0.6",
    contract_name: "arbitrated"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("arbitrated error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("arbitrated error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("arbitrated error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("arbitrated error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.arbitrated = Contract;
  }

})();
